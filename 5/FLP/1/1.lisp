; Вариант 2

; 1. Напишите сложную функцию, используя композиции функций CAR и CDR, которая возвращает атом * при применении к следующему списку: (1 (((2 3) (4 5) *) (6)))
(car (cdr (cdr (car (cdr (car (car (cdr (car (cdr `(1 `(`(`(2 3) `(4 5) *) `(6)))))))))))))

; 2. Объясните работу функций и определите результат обращения: (list '(a b) 7 '(()))

; 3. Из атомов 1, 2, 3, nil создайте указанные списки двумя способами: (1 (2) 3)
;    а) с помощью композиций функций CONS;
;    б) с помощью композиций функций LIST.
(cons 1(cons(cons 2 nil)(cons 3 nil)))
(list 1 (list 2) 3 )

; С помощью DEFUN определите функцию, которая возвращает измененный список по заданию (в теле функции разрешается использовать только следующие встроенные функции: CAR, CDR, CONS, APPEND, LIST, LAST, BUTLAST с одним аргументом). Проверьте её работу, организуя обращение к функции со списками разной длины.
; Функция меняет местами первый и второй элементы списка
(defun func (x) (append (list (car (cdr x)) (car x) ) (cddr x) ))
(func `(1 2 3 4 5 6 7 8 9))
